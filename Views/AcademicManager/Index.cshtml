@model IEnumerable<ClaimingSystem.Models.Claim>
@{
    ViewData["Title"] = "Academic Manager - Claims";
}
<div class="card">
    <div class="card-body">
        <h3 class="card-title">Claims to Approve</h3>
        <form method="get" class="row g-2 mb-3">
            <div class="col-auto">
                <select name="status" class="form-select form-select-sm">
                    <option value="">All statuses</option>
                    <option value="Submitted">Submitted</option>
                    <option value="Verified by PC">Verified by PC</option>
                    <option value="Approved">Approved</option>
                </select>
            </div>
            <div class="col-auto">
                <button class="btn btn-sm btn-outline-primary" type="submit">Filter</button>
            </div>
        </form>

        <div class="list-group">
        @{ var currentRole = Context.Request.Cookies["CurrentRole"] ?? "Lecturer"; }
        @foreach(var c in Model) {
            <a class="list-group-item list-group-item-action d-flex justify-content-between align-items-start" href="/AcademicManager/Approve/@c.Id">
                <div>
                    <strong>@c.Id</strong> - @c.LecturerName <span class="text-muted">(@c.Program)</span>
                    <div class="small text-muted">@c.SubmittedAt.ToString("g") - @c.Status</div>
                </div>
                <div>
                    @if(currentRole == "AcademicManager"){
                        <span class="badge bg-success">Approve</span>
                    } else {
                        <span class="badge bg-light text-muted">Requires AM</span>
                    }
                </div>
            </a>
        }
        </div>

        @{ 
            var total = ViewData["Total"] as int? ?? 0; 
            var page = ViewData["Page"] as int? ?? 1; 
            var pageSize = ViewData["PageSize"] as int? ?? 5; 
            var totalPages = (int)Math.Ceiling(total/(double)pageSize); 
            var statusFilter = ViewData["StatusFilter"] as string ?? string.Empty;
        }
        <nav class="mt-3 navbar">
            <ul class="pagination pagination-sm">
                @for(int i=1;i<=totalPages;i++){
                    var link = "?page=" + i + (string.IsNullOrEmpty(statusFilter) ? "" : "&status=" + statusFilter);
                    <li class="page-item @(i==page?"active":"")"><a class="page-link" href="@link">@i</a></li>
                }
            </ul>
        </nav>
    </div>
</div>
